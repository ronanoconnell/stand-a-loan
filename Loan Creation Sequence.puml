@startuml
'https://plantuml.com/sequence-diagram

title Sequence of Successful Loan Creation

autonumber
actor LoanOriginator
LoanOriginator -> LoanController: createLoan(loanRequest, documents)
activate LoanController
create Customer << Entity >>
LoanController -> Customer : new
create Loan << Entity >>
LoanController -> Loan : new
LoanController -> Customer : addLoan(loan)
LoanController -> Loan : setCustomer(customer)
LoanController --> CustomerService: createLoan(customer, documents)
activate CustomerService
loop n (=no. of documents) times
    CustomerService ->> DocumentStorageService: store(document)
    note right: aim to make this async to improve performance
    activate DocumentStorageService
    CustomerService --> CustomerService: checkForBatchProcessStart()
    activate CustomerService
    CustomerService -> BatchProcessMonitorService: hasBatchProcessStarted()
    activate BatchProcessMonitorService
    deactivate BatchProcessMonitorService
    deactivate CustomerService
    deactivate DocumentStorageService
end
CustomerService --> CustomerService: checkForBatchProcessStart()
activate CustomerService
CustomerService -> BatchProcessMonitorService: hasBatchProcessStarted()
activate BatchProcessMonitorService
deactivate BatchProcessMonitorService
deactivate CustomerService
CustomerService -> CustomerRepository: save(customer)
note right: ORM should cascade save of loan
activate CustomerRepository
deactivate CustomerRepository
LoanController <-- CustomerService: True
deactivate CustomerService
LoanOriginator <- LoanController: HTTP OK
deactivate LoanController
@enduml